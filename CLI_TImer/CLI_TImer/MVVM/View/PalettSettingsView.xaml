<UserControl x:Class="CLI_Timer.MVVM.View.PalettSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CLI_Timer.MVVM.View"
             xmlns:converter="clr-namespace:CLI_Timer.Converters"
             xmlns:color="clr-namespace:CLI_Timer.Themes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CLI_Timer;component/Themes/SettingStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/CLI_Timer;component/Themes/Temp.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <converter:HexToBrushConverter x:Key="HexToBrushConverter"/>
            <converter:HexToColorConverter x:Key="HexToColorConverter"/>
        </ResourceDictionary>

    </UserControl.Resources>

    <StackPanel>
        <Grid>
            <TextBlock Text="Color Gradients"
                       Style="{StaticResource HeadingStyle}" />

            <Button HorizontalAlignment="Right"
                    Width="36"
                    Height="36"
                    Background="{x:Static color:Colors.Secondary}"
                    BorderThickness="0"
                    Style="{StaticResource ButtonBase}"
                    Command="{Binding AddProfileCommand}">

                <Button.Content>
                    <Path Stroke="White"
                          StrokeThickness="2"
                          Height="25"
                          Width="25">
                        <Path.Data>
                            <GeometryGroup>
                                <LineGeometry StartPoint="12.5, 0"
                                              EndPoint="12.5, 25" />
                                <LineGeometry StartPoint="0, 12.5"
                                              EndPoint="25, 12.5" />
                            </GeometryGroup>
                        </Path.Data>
                    </Path>
                </Button.Content>

            </Button>
        </Grid>

        <ListView ItemsSource="{Binding Gradients}"
                  VerticalAlignment="Stretch"
                  Background="Red"
                  BorderThickness="0"
                  BorderBrush="Transparent"
                  ItemContainerStyle="{DynamicResource ColorListItemContainer}"
                  ScrollViewer.CanContentScroll="False"
                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                  DockPanel.Dock="Top"
                  SelectedItem="{Binding SelectedGradient}"
                  >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Height="50"
                                CornerRadius="10"
                                Padding="5, 0, 5, 0">
                            <Border.Background>
                                <LinearGradientBrush>
                                    <GradientStop Color="{Binding StartHex, Converter={StaticResource HexToColorConverter}}"
                                                  Offset="0" />
                                    <GradientStop Color="{Binding EndHex, Converter={StaticResource HexToColorConverter}}"
                                                  Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>

                                <TextBox Text="{Binding StartHex}"
                                         Style="{StaticResource ColorFieldStyle}"
                                         Background="Transparent"
                                         HorizontalAlignment="Left">
                                </TextBox>

                                <TextBox Text="{Binding EndHex}"
                                         Style="{StaticResource ColorFieldStyle}"
                                         Background="Transparent"
                                         HorizontalAlignment="Right"
                                         HorizontalContentAlignment="Right">
                                </TextBox>

                            </Grid>
                        </Border>

                        <Button x:Name="DeleteButton"
                                Style="{StaticResource DeleteProfileButtonStyle}"
                                Height="50" Width="50"
                                Margin="10, 0, 0, 0"
                                Grid.Column="1"
                                HorizontalAlignment="Right">
                            <Button.Content>
                                <Path Stroke="White"
                                      StrokeThickness="2"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <LineGeometry StartPoint="0, 0"
                                                          EndPoint="10, 10" />
                                            <LineGeometry StartPoint="0, 10"
                                                          EndPoint="10, 0" />
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Button.Content>

                        </Button>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListView>
    </StackPanel>
</UserControl>
