<Application x:Class="CLI_Timer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CLI_Timer"
             xmlns:viewModel="clr-namespace:CLI_Timer.MVVM.ViewModel"
             xmlns:view="clr-namespace:CLI_Timer.MVVM.View"
             StartupUri="MVVM/View/MainWindow.xaml">
    <Application.Resources>

        <SolidColorBrush x:Key="PrimaryColor" Color="#2B3046"/>
        <SolidColorBrush x:Key="SecondaryColor" Color="#272b3f"/>
        <SolidColorBrush x:Key="TertiaryColor" Color="#3f4666"/>
        <SolidColorBrush x:Key="LightHoverColor" Color="#56608c"/>
        <SolidColorBrush x:Key="TopBarColor" Color="#242633"/>
        <SolidColorBrush x:Key="PrimaryTextColor" Color="White"/>
        <SolidColorBrush x:Key="SecondaryTextColor" Color="#757276"/>

        <FontFamily x:Key="InterBold">/Fonts/#Inter Bold</FontFamily>
        <FontFamily x:Key="InterSemiBold">/Fonts/#Inter SemiBold</FontFamily>
        <FontFamily x:Key="InterMedium">/Fonts/#Inter Medium</FontFamily>


        <SolidColorBrush x:Key="Background"
                         Color="#242424" />
        <SolidColorBrush x:Key="Secondary"
                         Color="#2B2B2B" />

        <!--#region MainPage-->

        <!--#endregion-->
        

        <Style TargetType="{x:Type TextBox}" x:Key="InputFieldStyle">
            <Setter Property="CaretBrush"
                    Value="White" />
            <Setter Property="Foreground"
                    Value="White" />
            <Setter Property="Height"
                    Value="30" />
            <Setter Property="FontSize"
                    Value="16" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type TextBox}">

                        <Border Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                CornerRadius="5"
                                Padding="5, 0, 3, 0">

                            <ScrollViewer x:Name="PART_ContentHost" 
                                          FontSize="{TemplateBinding FontSize}"  
                                          Focusable="false" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"
                                          BorderThickness="0"
                                          VerticalContentAlignment="Center"
                                          Height="25"
                                          />

                        </Border>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>

        <DataTemplate DataType="{x:Type viewModel:GeneralSettingsViewModel}">
            <view:GernalSettingsView/>
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewModel:ProfileSettingsViewModel}">
            <view:ProfileSettingsView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModel:PalettSettingViewModel}">
            <view:PalettSettingsView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModel:SoundSettingsViewModel}">
            <view:SoundSettingsView/>
        </DataTemplate>

        <Style x:Key="BurgerMenu" TargetType="Image">
            <Setter Property="Source" Value="/Assets/BurgerMenu.png"/>
        </Style>


        <Style x:Key="Pointer" TargetType="TextBlock">
            <Setter Property="FontFamily" 
                    Value="/Fonts/#NanumGothic">
            </Setter>

            <Setter Property="Foreground"
                    Value="White"/>

            <Setter Property="FontSize"
                    Value="12"/>

            <Setter Property="VerticalAlignment"
                    Value="Center"/>
            
        </Style>

        <Style x:Key="Output" TargetType="TextBlock">
            <Setter Property="FontFamily"
                    Value="/Fonts/#Chivo Mono"/>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#20222e"/>
        <!-- 10% heller #3a3c47  20% heller #50515c 30% heller #666770 40% heller #7c7d85
        10% dunkler #20222e 20% dunkler #1d1e29  30% Dunkler 191b24 40% dunkler #16171f-->
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#191b24"/>
        
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        
        
        
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Transparent"/>
        <Style x:Key="CommandHistoryItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>

            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="0, 10, 0, 0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
